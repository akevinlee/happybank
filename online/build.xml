<?xml version="1.0"?>
<project name="HappyBankOnline" default="help" basedir=".">

    <property environment="env" />
    <property name="dir.src" value="src" />
    <property name="dir.build" value="build" />
    <property name="dir.dist" value="dist" />
    <property name="dir.doc" value="doc" />
    <property name="dir.lib" value="lib" />
    <property name="dir.common" value="../common" />
    <property name="dir.web" value="WebContent" />
    <property name="dir.websrc" value="WebContent/WEB-INF/src" />
    <property name="dir.weblib" value="${dir.web}/WEB-INF/lib" />

    <property file="build.properties" />
    <property file="default.properties" />
    <property file="${dir.common}/default.properties" />

    <import file="${dir.common}/common-macros.xml" optional="false" />
    <import file="${dir.common}/common-targets.xml" optional="false" />

    <!-- define a classpath for use througout the project -->
    <path id="project.classpath">
        <!-- include local libraries -->
        <fileset dir="${dir.common}/lib" />
        <fileset dir="${dir.weblib}" />
        <!-- include built classes -->
        <pathelement location="${dir.build}" />
        <!-- include Tomcat libraries -->
        <fileset dir="${env.TOMCAT_HOME}/lib" />
    </path>
    
    <!-- define any additional source directories -->
    <path id="project.sourcepath">
        <!-- none -->
    </path>

    <!-- overide of init target -->
    <target name="init" depends="common-targets.init">
        <mkdir dir="${dir.websrc}" />
    </target>

    <!-- overide of clean target -->
    <target name="clean" depends="common-targets.clean">
        <delete dir="${dir.websrc}" />
    </target>

    <condition property="is.tomcat.home.set">
        <isset property="env.TOMCAT_HOME"/>
    </condition>

    <!-- check if TOMCAT_HOME has been set -->
    <target name="check-tomcat" unless="is.tomcat.home.set">
        <echo>${env.TOMCAT_HOME}</echo>
        <fail message="The environment variable TOMCAT_HOME has not been set." />
    </target>

    <!-- override of compile target -->
    <target name="compile"
            depends="check-tomcat,common-targets.compile"
            description="compile JSPs">
        <!-- reference the jasper JSP compiler - 
        <taskdef classname="org.apache.jasper.JspC" name="jasper2" 
            classpathref="project.classpath"/> 
        <!- generate Java source code for the JSP -
        <jasper2 validateXml="false" uriroot="${dir.web}"  
            webXmlFragment="${dir.web}/WEB-INF/generated_web.xml" 
            outputDir="${dir.websrc}"/> 
        <!- compile the generated source code -
            <project-compile classpathref="project.classpath" 
            srcdir="${dir.websrc}"
            destdir="${dir.build}"/>
	    -->
    </target>

    <!-- create WAR file -->
    <target name="war"
            depends="make-manifest,compile"
            description="create WAR file">
        <war warfile="${dir.dist}/${ant.project.name}.war"
             webxml="WebContent/WEB-INF/web.xml"
             manifest="${dir.build}/manifest.mf">
            <fileset dir="WebContent">
                <patternset refid="web.sources" />
            </fileset>
            <zipfileset dir="WebContent/theme" prefix="theme" />
            <zipfileset dir="WebContent/META-INF"
                        includes="**/context.xml"
                        prefix="META-INF" />
            <classes dir="${dir.build}">
                <include name="net/sourceforge/happybank/**/*.class" />
                <include name="org/apache/jsp/**.class" />
            </classes>
            <lib dir="${dir.weblib}" />
        </war>
    </target>

    <!-- overide dist target - create Web Archive and deploy -->
    <target name="dist" depends="war">
    </target>

</project>

